{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Monitoring Server Creation",
  "Parameters": {
    "InstanceType": {
      "Description": "Type of EC2 instance to launch",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type"
    },
    "ImageId": {
	"Description": "AMI of of EC2 instance",
	"Default": "ami-6057e21a" ,
	"Type": "String"
    }, 
    "KeyName": {
      "Description": "Key Pair Name",
      "Type": "String",
      "Default": "Automation-Test"
    },
    "DBName" : {
     "Type": "String",
      "Default": "test"
    },

    "DBUser" : {
      "Type": "String",
      "Default": "admin"
    },

    "DBPassword" : {
       "Type": "String",
      "Default": "password"
    },
    "MonDB" : {
     "Type": "String",
      "Default": "test"
    },

    "MonUser" : {
      "Type": "String",
      "Default": "admin"
    },

    "MonPassword" : {
       "Type": "String",
      "Default": "password"
    }
  },
  "Resources": {
    "IPAddress" : {
      "Type" : "AWS::EC2::EIP"
    },

    "IPAssoc" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "InstanceId" : { "Ref" : "MonitoringInstance" },
        "EIP" : { "Ref" : "IPAddress" }
      }
    },
    "MonitoringInstance": {
      "Type": "AWS::EC2::Instance",
	"Properties": {
          "KeyName": {  "Ref": "KeyName"     },
          "ImageId": { "Ref":"ImageId" },
          "InstanceType": { "Ref": "InstanceType"    },
          "SubnetId": {"Fn::ImportValue" : {"Fn::Sub" : "PublicSubnetID1a"}},
          "SecurityGroupIds": [{"Fn::ImportValue" : {"Fn::Sub" : "PublicSGID"}}],
          "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
	     "yum update -y\n",
             "yum update -y aws-cfn-bootstrap\n",
             "# InstallAndRun the files and packages from the metadata\n",

             "# Install the files and packages from the metadata\n",
             "/opt/aws/bin/cfn-init ",
             "         --stack ", { "Ref" : "AWS::StackName" },
             "         --resource MonitoringInstance ",
             "         --configsets InstallAndRun ",
             "         --region ", { "Ref" : "AWS::Region" }, "\n",

             "# Signal the status from cfn-init\n",
             "/opt/aws/bin/cfn-signal -e $? ",
             "         --stack ", { "Ref" : "AWS::StackName" },
             "         --resource MonitoringInstance ",
             "         --region ", { "Ref" : "AWS::Region" }, "\n"
		]]}},
          "Tags": [
           {
             "Key": "Application",
             "Value": {
             "Ref": "AWS::StackName"
            	}
           },   {
             "Key": "Name",
               "Value": "MonitoringServer"
             }
           ]
         },
       "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT5M"
        }
       },
        "Metadata" : {
          "Comment1" : "Zabbix - Apache Servers Installation",
	  "AWS::CloudFormation::Init" : {
          "configSets" : {
	    "InstallAndRun" : [ "Install" , "Configure" , "Discovery" ]
          },

          "Install" : {
            "packages" : {
              "yum" : {
                "mysql"        : [],
                "mysql-libs"   : [],
                "httpd"        : [],
                "php"          : [],
                "php-mysql"    : [],
                "epel-release"          : [],
                "httpd-devel"          : [],
                "php-cli"          : [],
                "php-pear"          : [],
                "php-gd"          : [],
                "php-mbstring"          : [],
                "php-xml"          : []
              }
	     },
	    "commands": {
	              "01" : { "command" : "service httpd start"  },
	              "02" : { "command" : "yum --enablerepo=epel install zabbix -y" },
	              "03" : { "command" : "yum --enablerepo=epel install zabbix-server-mysql zabbix-web-mysql zabbix-agent zabbix-java-gateway -y"  }

             },
	   "files" : {
	      "/etc/httpd/conf.d/zabbix.conf" : {
		"content" : { "Fn::Join" : [ "", [
			"Alias /zabbix /usr/share/zabbix\n",
			"<Directory '/usr/share/zabbix'>\n",
			 "Options FollowSymLinks\n",
			 "AllowOverride None\n",
			 "Order allow,deny\n",
			 "Allow from All\n",
			"<IfModule mod_php5.c>\n",
        		"php_value max_execution_time 300\n",
       			" php_value memory_limit 128M\n",
        		"php_value post_max_size 16M\n",
        		"php_value upload_max_filesize 2M\n",
       			" php_value max_input_time 300\n",
       			" php_value always_populate_raw_post_data -1\n",
        		"  php_value date.timezone Europe/Istanbul\n",
     			"</IfModule>\n",

			"</Directory>\n"
                ]]},
                "mode"    : "000744",
                "owner"   : "root",
                "group"   : "root"
              },
	      "/etc/cfn/cfn-hup.conf" : {
                "content" : { "Fn::Join" : [ "", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                ]]},
                "mode"    : "000400",
                "owner"   : "root",
                "group"   : "root"
              },	
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": { "Fn::Join": [ "", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.MonitoringInstance.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                          "         --stack ", { "Ref" : "AWS::StackName" },
                          "         --resource MonitoringInstance ",
                          "         --configsets InstallAndRun ",
                          "         --region ", { "Ref" : "AWS::Region" }, "\n",
                  "runas=root\n"
                ]]},          
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              }
	   },
            "services" : {
              "sysvinit" : {
                "httpd" : {
                  "enabled" : "true",
                  "ensureRunning" : "true"
                },
                "cfn-hup" : {
                  "enabled" : "true",
                  "ensureRunning" : "true",
                  "files" : [ "/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf" ]
                }
            }
          }
	},
      "Configure" : {
            "commands" : {
              "01_create_database" : {
                "command" : { "Fn::Join" : ["", [
                       "mysql -h ", { "Fn::ImportValue": {"Fn::Sub": "Endpoint" } },
                       " -u ",{ "Ref" : "DBUser" },
                       "  --password='", { "Ref" : "DBPassword" },"'",
		       " -e 'CREATE DATABASE IF NOT EXISTS ",{ "Ref" : "MonDB" }," CHARACTER SET UTF8;'\n"
                     ]]}
              },

              "02_create_user" : {
                "command" : { "Fn::Join" : ["", [
                       "mysql -h ", { "Fn::ImportValue": {"Fn::Sub": "Endpoint" } },
                       " -u ",{ "Ref" : "DBUser" },
                       "  --password='", { "Ref" : "DBPassword" },"'",
                       " -e 'GRANT ALL on `",{ "Ref" : "MonDB" },
			"`.* to `",{ "Ref" : "MonUser" },"`@`%`",
			 " IDENTIFIED BY \"",{ "Ref" : "MonPassword" },"\";'\n"

		     ]]}
              },
              "03_flush" : {
                "command" : { "Fn::Join" : ["", [
                       "mysql -h ", { "Fn::ImportValue": {"Fn::Sub": "Endpoint" } },
                       " -u ",{ "Ref" : "DBUser" },
                       "  --password='", { "Ref" : "DBPassword" },"'",
                       " -e 'FLUSH PRIVILEGES;'\n"

                     ]]}
              },

	      "04_schema import " : {
                "command" : { "Fn::Join" : ["", ["mysql -h" , {
                      "Fn::ImportValue": {
                        "Fn::Sub": "Endpoint"
                      }
                    }," -u ",{ "Ref" : "MonUser" },"  --password='", { "Ref" : "MonPassword" }, "' ",{ "Ref" : "MonDB" }," < /usr/share/doc/zabbix-server-mysql-1.8.22/create/schema/mysql.sql"]]}
	      },
	      "05_data import" : {
                "command" : { "Fn::Join" : ["", ["mysql -h" , {
                      "Fn::ImportValue": {
                        "Fn::Sub": "Endpoint"
                      }
                    }," -u ",{ "Ref" : "MonUser" },"  --password='", { "Ref" : "MonPassword" }, "' ",{ "Ref" : "MonDB" }," < /usr/share/doc/zabbix-server-mysql-1.8.22/create/data/data.sql"]]}
              },
            "05_ DB": {
              "command": { "Fn::Join" : ["", ["sed -i 's/.*# DBHost=.*/DBHost='",{ "Fn::ImportValue": {"Fn::Sub": "Endpoint" } },"'/g' /etc/zabbix/zabbix_server.conf"]]}
            },

            "05_ DB": {
              "command": { "Fn::Join" : ["", ["sed -i 's/.*DBName=.*/DBName='",{ "Ref" : "MonDB" },"'/g' /etc/zabbix/zabbix_server.conf"]]}
            },
            "06_ User" : {
              "command": { "Fn::Join" : ["", ["sed -i 's/.*DBUser=.*/DBUser='",{ "Ref" : "MonUser" },"'/g' /etc/zabbix/zabbix_server.conf"]]}
            },           
	    "07_ Password" : {
              "command": { "Fn::Join" : ["", ["sed -i 's/.*DBPassword=.*/DBPassword='",{ "Ref" : "MonPassword" },"'/g' /etc/zabbix/zabbix_server.conf"]]}
            },
           "08_ Hostname ": {
              "command": "HOST=$(curl http://169.254.169.254/latest/meta-data/local-hostname) && sed -i 's/.*Hostname=.*/Hostname='$HOST'/g' /etc/zabbix/zabbix_agentd.conf"
            },
            "09_ IP" : {
              "command": "IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4) && sed -i 's/.*Server=.*/Server='$IP'/g' /etc/zabbix/zabbix_agentd.conf"
            }
            },
          "services": {
            "sysvinit": {
              "httpd": {
                "enabled": "true",
                "ensureRunning": "true"
              },
              "zabbix-server": {
                "enabled": "true",
                "ensureRunning": "true"
              }, 
             "zabbix-agent": {
                "enabled": "true",
                "ensureRunning": "true"
              }
           
            }
        }
       },
	"Discovery" : {
            "commands" : {
		"01_Discovery Rule Prepare" : {
                	"command" : "echo 'THIS COMMAND WILL SCAN NETWORK ACCORDING TO DISCOVERY RULE plus SUBNET'"
	     	},
                "02_Scan Network and add hosts to watch group" : {
                        "command" : "echo 'THIS COMMAND WILL SCAN NETWORK ACCORDING TO DISCOVERY RULE plus SUBNET'"
                }

	     }
	}
     }
    }  
   }
  },
    "Outputs": {
      "MonitoringURL": {
        "Description": "URL for Monitoring server",
        "Value": {
          "Fn::Join": [
            "",
            [
              "http://",
              {
                "Fn::GetAtt": [
                  "MonitoringInstance",
                  "PublicDnsName"
                ]
              },"/zabbix"
            ]
          ]
        }
    },
 "MonitoringInfo": {
        "Description": "Default User / Pass",
        "Value": "User:Admin Pass:zabbix"
        
    }


  }
}
