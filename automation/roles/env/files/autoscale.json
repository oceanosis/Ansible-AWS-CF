{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AutoScale - LaunchConfig - LoadBalancer"


  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "Default": "Automation-Test"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro","m1.small","t2.micro" ]
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "WebServerCapacity": {
      "Default": "2",
      "Description" : "The initial number of WebServer instances",
      "Type": "Number",
      "MinValue": "1",
      "MaxValue": "3",
      "ConstraintDescription" : "must be between 1 and 3 EC2 instances."
    },
   "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "t2.micro"    : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64" : "ami-6057e21a" }
    }
  },

  "Resources" : {

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Metadata" : {
        "Comment1" : "Configure the Load Balancer with a simple health check and cookie-based stickiness",
        "Comment2" : "Use install path for healthcheck to avoid redirects - ELB healthcheck does not handle 302 return codes"
      },
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LBCookieStickinessPolicy" : [ {
          "PolicyName" : "CookieBasedPolicy",
          "CookieExpirationPeriod" : "30"
        } ],
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "Protocol" : "HTTP",
          "PolicyNames" : [ "CookieBasedPolicy" ]
        } ],
        "HealthCheck" : {
          "Target" : "HTTP:80/index.php",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "5",
          "Interval" : "10",
          "Timeout" : "5"
        }
      }
    },
   "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "3",
        "DesiredCapacity" : { "Ref" : "WebServerCapacity" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ]
      }
    },
    "LaunchConfig": {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "httpd"     : [],
                "php"       : [],
                "php-mysql" : [],
     		"php-gd"    : [],
     		"php-pear"  : [],
     		"php-mysql" : [],
     		"mysql57"   : [],
     		"MySQL-python27": []
              }
            },
            "sources" : {
              "/var/www/html" : "https://s3.amazonaws.com/mybb-automation-dumlu/mybb_ready.tar.gz",
              "/tmp" : "https://s3.amazonaws.com/mybb-automation-dumlu/mybb_dump.sql"
            },
	    "files" : {
		  "/tmp/mybb_setup.sql" : {
		    "content" : { "Fn::Join" : ["", [
		      "CREATE DATABASE ", {{ rdsdb }}, ";\n"
		      ]]},
		    "mode"  : "000644",
		    "owner" : "root",
		    "group" : "root"
		  }
	    },  
            "services" : {
              "sysvinit" : {
                "httpd"    : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", {{ region }},
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Fn::ImportValue" : {"Fn::Sub" : "PrivateSGID"}} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "yum update -y\n",
	  "mysql -u {{ rdsuser }} -p {{ rdspass }} {{ rdshost }} < /tmp/mybb_setup.sql"
	  "mysql -u {{ rdsuser }} -p {{ rdspass }} {{ rdshost }} < /tmp/mybb_dump.sql"
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r LaunchConfig ",
          "         --region ", {{ region }}, "\n",
          "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "WaitHandle" }, "'\n",

          "chown -R apache:apache /var/www/html/\n"
          "systemctl httpd restart/\n"
        ]]}}
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServerGroup",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "300"
      }
    }
},

  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ] }] },
      "Description" : "MyBB Website "
    }
  }
}
